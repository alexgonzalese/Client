{"ast":null,"code":"var _jsxFileName = \"C:\\\\ReacProyects\\\\WebPersonal\\\\Client\\\\src\\\\components\\\\Admin\\\\ListUsers\\\\ListUsers.js\",\n    _s = $RefreshSig$();\n\nimport * as React from \"react\";\nimport Paper from \"@mui/material/Paper\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TablePagination from \"@mui/material/TablePagination\";\nimport TableRow from \"@mui/material/TableRow\";\nimport IconButton from \"@mui/material/IconButton\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport Button from \"@mui/material/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: \"email\",\n  label: \"Email\",\n  minWidth: 170\n}, {\n  id: \"name\",\n  label: \"Nombre\",\n  minWidth: 100\n}, {\n  id: \"lastname\",\n  label: \"Apellido\",\n  minWidth: 170,\n  align: \"right\"\n}, {\n  id: \"torre\",\n  label: \"torre\",\n  minWidth: 50,\n  align: \"right\"\n}, {\n  id: \"apto\",\n  label: \"Apto\",\n  minWidth: 50,\n  align: \"right\"\n}, {\n  id: \"density\",\n  label: \"Density\",\n  render: () => /*#__PURE__*/_jsxDEV(Button, {\n    variant: \"contained\",\n    href: \"#contained-buttons\",\n    children: \"Link\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n}];\n\nfunction createData(email, name, lastname, torre, apto) {\n  return {\n    email,\n    name,\n    lastname,\n    torre,\n    apto\n  };\n}\n\nconst rows = [createData(\"India\", \"IN\", 1324171354, 6, 3287263), createData(\"China\", \"CN\", 1403500365, 6, 9596961), createData(\"Italy\", \"IT\", 60483973, 6, 301340), createData(\"United States\", \"US\", 327167434, 6, 9833520), createData(\"Canada\", \"CA\", 37602103, 6, 9984670), createData(\"Australia\", \"AU\", 25475400, 6, 7692024), createData(\"Germany\", \"DE\", 83019200, 6, 357578), createData(\"Ireland\", \"IE\", 4857000, 6, 70273), createData(\"Mexico\", \"MX\", 126577691, 6, 1972550), createData(\"Japan\", \"JP\", 126317000, 6, 377973), createData(\"France\", \"FR\", 67022000, 6, 640679), createData(\"United Kingdom\", \"GB\", 67545757, 6, 242495), createData(\"Russia\", \"RU\", 146793744, 4, 17098246), createData(\"Nigeria\", \"NG\", 200962417, 4, 923768), createData(\"Brazil\", \"BR\", 210147125, 4, 8515767)];\nexport default function StickyHeadTable() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: \"100%\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(StickyHeadTable, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = StickyHeadTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"StickyHeadTable\");","map":{"version":3,"sources":["C:/ReacProyects/WebPersonal/Client/src/components/Admin/ListUsers/ListUsers.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","IconButton","DeleteIcon","Button","columns","id","label","minWidth","align","render","createData","email","name","lastname","torre","apto","rows","StickyHeadTable","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","width","overflow","maxHeight","map","column","slice","row","code","length"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport Button from \"@mui/material/Button\";\r\n\r\nconst columns = [\r\n  { id: \"email\", label: \"Email\", minWidth: 170 },\r\n  { id: \"name\", label: \"Nombre\", minWidth: 100 },\r\n  {\r\n    id: \"lastname\",\r\n    label: \"Apellido\",\r\n    minWidth: 170,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"torre\",\r\n    label: \"torre\",\r\n    minWidth: 50,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"apto\",\r\n    label: \"Apto\",\r\n    minWidth: 50,\r\n    align: \"right\",\r\n  },\r\n  {\r\n    id: \"density\",\r\n    label: \"Density\",\r\n    render: () => (\r\n      <Button variant=\"contained\" href=\"#contained-buttons\">\r\n        Link\r\n      </Button>\r\n    ),\r\n  },\r\n];\r\n\r\nfunction createData(email, name, lastname, torre, apto) {\r\n  return { email, name, lastname, torre, apto };\r\n}\r\n\r\nconst rows = [\r\n  createData(\"India\", \"IN\", 1324171354, 6, 3287263),\r\n  createData(\"China\", \"CN\", 1403500365, 6, 9596961),\r\n  createData(\"Italy\", \"IT\", 60483973, 6, 301340),\r\n  createData(\"United States\", \"US\", 327167434, 6, 9833520),\r\n  createData(\"Canada\", \"CA\", 37602103, 6, 9984670),\r\n  createData(\"Australia\", \"AU\", 25475400, 6, 7692024),\r\n  createData(\"Germany\", \"DE\", 83019200, 6, 357578),\r\n  createData(\"Ireland\", \"IE\", 4857000, 6, 70273),\r\n  createData(\"Mexico\", \"MX\", 126577691, 6, 1972550),\r\n  createData(\"Japan\", \"JP\", 126317000, 6, 377973),\r\n  createData(\"France\", \"FR\", 67022000, 6, 640679),\r\n  createData(\"United Kingdom\", \"GB\", 67545757, 6, 242495),\r\n  createData(\"Russia\", \"RU\", 146793744, 4, 17098246),\r\n  createData(\"Nigeria\", \"NG\", 200962417, 4, 923768),\r\n  createData(\"Brazil\", \"BR\", 210147125, 4, 8515767),\r\n];\r\n\r\nexport default function StickyHeadTable() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper sx={{ width: \"100%\", overflow: \"hidden\" }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}