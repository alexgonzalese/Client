{"ast":null,"code":"import { basePath, apiVersion } from \"./config\";\nexport function signUpApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-up`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    if (result.user) {\n      return {\n        ok: true,\n        message: \"Usuario Creado\"\n      };\n    }\n\n    return {\n      ok: false,\n      message: result.message\n    };\n  }).catch(err => {\n    return {\n      ok: false,\n      message: err.message\n    };\n  });\n}\nexport function signInApi(data) {\n  const url = `${basePath}/${apiVersion}/sign-in`;\n  const params = {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    //console.log(result);\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}\nexport function getUsersApi(token) {\n  const url = `${basePath}/${apiVersion}/users`;\n  const params = {\n    method: \"Get\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: token\n    }\n  };\n  return fetch(url, params).then(response => {\n    return response.json();\n  }).then(result => {\n    return result;\n  }).catch(err => {\n    return err.message;\n  });\n}","map":{"version":3,"sources":["C:/ReacProyects/WebPersonal/Client/src/api/user.js"],"names":["basePath","apiVersion","signUpApi","data","url","params","method","body","JSON","stringify","headers","fetch","then","response","json","result","user","ok","message","catch","err","signInApi","getUsersApi","token","Authorization"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,UAArC;AAEA,OAAO,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AAC9B,QAAMC,GAAG,GAAI,GAAEJ,QAAS,IAAGC,UAAW,UAAtC;AACA,QAAMI,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFO;AAGbO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHI,GAAf;AAQA,SAAOC,KAAK,CAACP,GAAD,EAAMC,MAAN,CAAL,CACJO,IADI,CACEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHI,EAIJF,IAJI,CAIEG,MAAD,IAAY;AAChB,QAAIA,MAAM,CAACC,IAAX,EAAiB;AACf,aAAO;AAAEC,QAAAA,EAAE,EAAE,IAAN;AAAYC,QAAAA,OAAO,EAAE;AAArB,OAAP;AACD;;AACD,WAAO;AAAED,MAAAA,EAAE,EAAE,KAAN;AAAaC,MAAAA,OAAO,EAAEH,MAAM,CAACG;AAA7B,KAAP;AACD,GATI,EAUJC,KAVI,CAUGC,GAAD,IAAS;AACd,WAAO;AAAEH,MAAAA,EAAE,EAAE,KAAN;AAAaC,MAAAA,OAAO,EAAEE,GAAG,CAACF;AAA1B,KAAP;AACD,GAZI,CAAP;AAaD;AAED,OAAO,SAASG,SAAT,CAAmBlB,IAAnB,EAAyB;AAC9B,QAAMC,GAAG,GAAI,GAAEJ,QAAS,IAAGC,UAAW,UAAtC;AACA,QAAMI,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,MADK;AAEbC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFO;AAGbO,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AAHI,GAAf;AAQA,SAAOC,KAAK,CAACP,GAAD,EAAMC,MAAN,CAAL,CACJO,IADI,CACEC,QAAD,IAAc;AAClB,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHI,EAIJF,IAJI,CAIEG,MAAD,IAAY;AAChB;AACA,WAAOA,MAAP;AACD,GAPI,EAQJI,KARI,CAQGC,GAAD,IAAS;AACd,WAAOA,GAAG,CAACF,OAAX;AACD,GAVI,CAAP;AAWD;AAED,OAAO,SAASI,WAAT,CAAqBC,KAArB,EAA4B;AACjC,QAAMnB,GAAG,GAAI,GAAEJ,QAAS,IAAGC,UAAW,QAAtC;AAEA,QAAMI,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbI,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPc,MAAAA,aAAa,EAAED;AAFR;AAFI,GAAf;AAQA,SAAOZ,KAAK,CAACP,GAAD,EAAMC,MAAN,CAAL,CACNO,IADM,CACDC,QAAQ,IAAG;AACf,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,GAHM,EAINF,IAJM,CAIDG,MAAM,IAAE;AACZ,WAAOA,MAAP;AACD,GANM,EAONI,KAPM,CAOAC,GAAG,IAAG;AACX,WAAOA,GAAG,CAACF,OAAX;AACD,GATM,CAAP;AAYD","sourcesContent":["import { basePath, apiVersion } from \"./config\";\r\n\r\nexport function signUpApi(data) {\r\n  const url = `${basePath}/${apiVersion}/sign-up`;\r\n  const params = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      if (result.user) {\r\n        return { ok: true, message: \"Usuario Creado\" };\r\n      }\r\n      return { ok: false, message: result.message };\r\n    })\r\n    .catch((err) => {\r\n      return { ok: false, message: err.message };\r\n    });\r\n}\r\n\r\nexport function signInApi(data) {\r\n  const url = `${basePath}/${apiVersion}/sign-in`;\r\n  const params = {\r\n    method: \"POST\",\r\n    body: JSON.stringify(data),\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  return fetch(url, params)\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((result) => {\r\n      //console.log(result);\r\n      return result;\r\n    })\r\n    .catch((err) => {\r\n      return err.message;\r\n    });\r\n}\r\n\r\nexport function getUsersApi(token) {\r\n  const url = `${basePath}/${apiVersion}/users`;\r\n\r\n  const params = {\r\n    method: \"Get\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: token,\r\n    },\r\n  };\r\n\r\n  return fetch(url, params)\r\n  .then(response =>{\r\n    return response.json();\r\n  })\r\n  .then(result=>{\r\n    return result;\r\n  })\r\n  .catch(err =>{\r\n    return err.message;\r\n  });\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}